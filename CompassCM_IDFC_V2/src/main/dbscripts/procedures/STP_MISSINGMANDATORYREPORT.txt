CREATE OR REPLACE PROCEDURE COMAML.STP_MISSINGMANDATORYREPORT
-- EXEC STP_MISSINGMANDATORYREPORT('5', 'ALL', 'ALL', 1,'AMLUser',:KG);
(
i_vcTemplateId          IN VARCHAR2, i_vcBranchCode   IN VARCHAR2,
i_vcComplianceScore     IN VARCHAR2, i_vcIPAddress    IN VARCHAR2, 		
i_vcUserCode    	IN VARCHAR2, io_vcResultSet   IN OUT SYS_REFCURSOR
)
AS
--EXEC STP_MISSINGMANDATORYREPORT('1', 'ALL', 'ALL');

  vcSql            VARCHAR2(4000);
  vcTempSql        VARCHAR2(4000);
  vcFieldType      VARCHAR2(1);
  vcCustomertable  VARCHAR2(30);
  i_vcProduct      VARCHAR2(30);
  i_vcCustomerType VARCHAR2(30);
  CURSOR curTemp IS
    SELECT A.TABLENAME, A.FIELDNAME AS MANDATORYFIELD,
           '(NVL(a.'||(A.FIELDNAME)||','||CASE FILTER WHEN  '(0)' THEN '0) IN(0))'
                    ELSE 
		    CASE WHEN INSTR(A.FIELDNAME,'DATE') > 0 THEN '''31 DEC 1949'''||') IN (''31 DEC 1949'') )'
                         ELSE ''' '''||') IN '||FILTER||' )'
                     END
                   END AS MANDATORYFIELDFILTER, COMPLIANCESCORE
              FROM TT_MMINFO_KYCLIST A 
	     INNER JOIN TT_MMINFO_TAB B ON A.TABLENAME =   B.TABLENAME
                                       AND A.FIELDNAME = B.FIELDNAME;
  recordData curTemp%ROWTYPE;

BEGIN

DELETE FROM C;
COMMIT;
INSERT INTO C VALUES(i_vcTemplateId ||'  '||i_vcBranchCode||'   '||i_vcComplianceScore);
COMMIT;

SELECT PRODUCTCODE, CUSTOMERTYPE 
  INTO i_vcProduct, i_vcCustomerType 
  FROM TB_MMLISTMASTER 
 WHERE TEMPLATEID = i_vcTemplateId;
INSERT INTO C VALUES(i_vcProduct ||'  '||i_vcCustomerType);
COMMIT;

DELETE FROM TT_MMINFO_TAB;
DELETE FROM TT_MMINFO_ACCMAST;
DELETE FROM TT_MMINFO_KYCLIST;
DELETE FROM TT_MMINFO_MMFO;

vcFieldType :=
      CASE i_vcComplianceScore
           WHEN  '3' THEN '3'
           WHEN  '2' THEN '2'
           WHEN  '1' THEN '1'
           WHEN 'ALL' THEN 'A'
           ELSE '4'
      END;

INSERT INTO TT_MMINFO_TAB
SELECT a.TABLE_NAME AS TABLENAME, B.COLUMN_NAME AS FIELDNAME,
       CASE WHEN  B.DATA_TYPE IN ('CHAR','VARCHAR2') THEN '('' '', ''N'')'
            WHEN  B.DATA_TYPE IN ('REAL','NUMERIC','INT','SMALLINT','TINYINT', 'NUMBER') THEN '(0)'
       ELSE '( )' END AS FILTER
  FROM USER_TABLES a
 INNER JOIN USER_TAB_COLUMNS B ON A.TABLE_NAME = B.TABLE_NAME
 WHERE A.TABLE_NAME IN 
      ('TB_CUSTOMERMASTER', 'TB_MINORDETAILS', 'TB_NRECUSTOMERDETAILS', 'TB_ACCOUNTSMASTER', 'TB_NOMINEEDETAILS');

DELETE FROM TT_KYCCUSTOMERMASTER;

INSERT INTO  TT_KYCCUSTOMERMASTER(
       CUSTOMERID, CUSTOMERNAME, CUSTOMERTYPE, CUSTOMERCATEGORY, MINOR, BANKCODE,
       BRANCHCODE, NATUREOFBUSINESS, CREDITRATING, CREATEDDATETIME, INTRODUCERCUSTOMERID,
       INTRODUCERNAME,  INTRODUCERCATEGORY, CUSTOMEREMPCODE, ESTIMATEDINCOMEFROMBUSINESS,
       OTHERINCOME, ANNUALINCOME, NET_WORTH,
       ADDRESSLINE1, ADDRESSLINE2, ADDRESSLINE3, CITY, STATE, COUNTRY, PINCODE, PHONENO,
       MOBILENO, FAXNO, EMAILID, WEBSITE, COMM_ADDRESSLINE1, COMM_ADDRESSLINE2, COMM_CITY,
       COMM_STATE, COMM_COUNTRY, COMM_PINCODE, COMM_PHONENO, COMM_FAXNO, COMM_EMAILID, REMARKS,
       SALUTATION, FIRSTNAME, MIDDLENAME, LASTNAME, FATHERNAME, MOTHERNAME, DATEOFBIRTH, PLACEOFBIRTH,
       NATIONALITY, RESIDENTIALSTATUS, IDENTIFICATIONMARKS, AGE, SEX, EMPLOYERCODE, EMPLOYERADDRESSLINE1,
       EMPLOYERADDRESSLINE2, EMPLOYERCITY, EMPLOYERSTATE, EMPLOYERCOUNTRY, EMPLOYERPINCODE, EMPLOYERPHONENO,
       EMPLOYERFAXNO, EMPLOYEREMAILID, SOURCEOFFUNDS, PANNO, DRIVINGLICENSENO, PASSPORTNO, VOTERIDENTITYCARDNO,
       MARITALSTATUS, DEPENDENTS, OCCUPATION, EDUCATION, GRADE, BANKVISIT,
       INVESTMENTS_VAL, LOANSAVAILED,
       UPDATETIMESTAMP, UPDATEDBY, ACCOUNTNO)
SELECT B.CUSTOMERID, B.CUSTOMERNAME, B.CUSTOMERTYPE, B.CUSTOMERCATEGORY, B.MINOR, B.BANKCODE,
       B.BRANCHCODE, B.NATUREOFBUSINESS, B.CREDITRATING, B.CREATEDDATETIME, B.INTRODUCERCUSTOMERID,
       B.INTRODUCERNAME,  B.INTRODUCERCATEGORY, B.CUSTOMEREMPCODE, B.ESTIMATEDINCOMEFROMBUSINESS,
       B.OTHERINCOME, B.ANNUALINCOME, B.NET_WORTH,
       B.ADDRESSLINE1, B.ADDRESSLINE2, B.ADDRESSLINE3, B.CITY, B.STATE, B.COUNTRY, B.PINCODE, B.PHONENO,
       B.MOBILENO, B.FAXNO, B.EMAILID, B.WEBSITE, B.COMM_ADDRESSLINE1, B.COMM_ADDRESSLINE2, B.COMM_CITY,
       B.COMM_STATE, B.COMM_COUNTRY, B.COMM_PINCODE, B.COMM_PHONENO, B.COMM_FAXNO, B.COMM_EMAILID, B.REMARKS,
       B.SALUTATION, B.FIRSTNAME, B.MIDDLENAME, B.LASTNAME, B.FATHERNAME, B.MOTHERNAME, B.DATEOFBIRTH, B.PLACEOFBIRTH,
       B.NATIONALITY, B.RESIDENTIALSTATUS, B.IDENTIFICATIONMARKS, B.AGE, B.SEX, B.EMPLOYERCODE, B.EMPLOYERADDRESSLINE1,
       B.EMPLOYERADDRESSLINE2, B.EMPLOYERCITY, B.EMPLOYERSTATE, B.EMPLOYERCOUNTRY, B.EMPLOYERPINCODE, B.EMPLOYERPHONENO,
       B.EMPLOYERFAXNO, B.EMPLOYEREMAILID, B.SOURCEOFFUNDS, B.PANNO, B.DRIVINGLICENSENO, B.PASSPORTNO, B.VOTERIDENTITYCARDNO,
       B.MARITALSTATUS, B.DEPENDENTS, B.OCCUPATION, B.EDUCATION, B.GRADE, B.BANKVISIT,
       B.INVESTMENTS_VAL, B.LOANSAVAILED,
       B.UPDATETIMESTAMP, B.UPDATEDBY, A.ACCOUNTNO
  FROM TB_ACCOUNTSMASTER A, TB_CUSTOMERMASTER B 
 WHERE A.CUSTOMERID = B.CUSTOMERID 
   AND A.PRODUCTCODE = i_vcProduct
   AND B.CUSTOMERTYPE = CASE WHEN i_vcCustomerType = 'ALL' THEN B.CUSTOMERTYPE ELSE i_vcCustomerType END 
   AND A.BRANCHCODE = CASE WHEN i_vcBranchCode = 'ALL' THEN A.BRANCHCODE ELSE i_vcBranchCode END;

IF(vcFieldType NOT IN ('A') ) THEN

INSERT INTO TT_MMINFO_KYCLIST
SELECT A.FIELDNAME, A.TABLENAME, COMPLIANCESCORE
  FROM TB_MMLISTDETAIL A
 WHERE TEMPLATEID = i_vcTemplateId
 ORDER BY TABLENAME;

ELSE

INSERT INTO TT_MMINFO_KYCLIST
SELECT A.FIELDNAME, A.TABLENAME, COMPLIANCESCORE
  FROM TB_MMLISTDETAIL A
 WHERE A.TEMPLATEID = i_vcTemplateId
   AND a.COMPLIANCESCORE IN ('1','2','3')
 ORDER BY TABLENAME;
END IF;

OPEN curTemp;
LOOP
    FETCH curTemp INTO recordData;
    EXIT WHEN  curTemp%NOTFOUND;
    vcCustomertable := REPLACE(REPLACE(REPLACE(recordData.TableName,'TB_CUSTOMERMASTER','TT_KYCCUSTOMERMASTER'),'TT_KYCCUSTOMERMASTER'),'TT_KYCCUSTOMERMASTER' );

    IF (vcCustomertable = 'TT_KYCCUSTOMERMASTER' ) THEN
    vcSql := 'INSERT INTO TT_MMINFO_MMFO '
          || 'SELECT A.CUSTOMERID, A.ACCOUNTNO, A.CUSTOMERNAME, A.BRANCHCODE  ,'
          || ''||chr(39) ||recordData.MandatoryField||chr(39)||'  AS MISSINGFIELD, '
          || ''||chr(39) ||recordData.ComplianceScore||chr(39)||' AS COMPLIANCESCORE '
          || 'FROM '
          ||vcCustomertable || ' A '  ;
  ELSE
    vcSql := 'INSERT INTO TT_MMINFO_MMFO '
          || 'SELECT B.CUSTOMERID, B.ACCOUNTNO, B.CUSTOMERNAME, B.BRANCHCODE  ,'
          || ''||chr(39) ||recordData.MandatoryField||chr(39)||'  AS MISSINGFIELD, '
          || ''||chr(39) ||recordData.ComplianceScore||chr(39)||' AS COMPLIANCESCORE '
          || 'FROM '
          ||recordData.TableName|| ' A '
          || 'INNER JOIN TT_KYCCUSTOMERMASTER B ON ';

    vcTempSql :=
    CASE recordData.TableName
      WHEN 'TB_ACCOUNTSMASTER' THEN ' A.ACCOUNTNO = B.ACCOUNTNO AND A.ACCOUNTNO IS NOT NULL '
      WHEN 'TB_NOMINEEDETAILS' THEN ' A.ACCOUNTNO = B.ACCOUNTNO AND A.ACCOUNTNO IS NOT NULL '
      WHEN 'TB_CUSTOMERMASTER' THEN ' A.CUSTOMERID = B.CUSTOMERID  '
      WHEN 'TB_MINORDETAILS'   THEN ' A.CUSTOMERID = B.CUSTOMERID AND A.CUSTOMERID IS NOT NULL '
      WHEN 'TB_NRECUSTOMERDETAILS' THEN ' A.CUSTOMERID = B.CUSTOMERID AND A.CUSTOMERID IS NOT NULL '
      ELSE ' A.ACCOUNTNO = B.ACCOUNTNO AND A.ACCOUNTNO IS NOT NULL'
    END;

    vcSql := vcSql || vcTempSql;
  END IF;
    
    vcSql := vcSql || ' WHERE '||recordData.MandatoryFieldFilter||' ';
    EXECUTE IMMEDIATE vcSql;
  
  END LOOP;
  CLOSE curTemp;

  DELETE FROM TB_MISSINGMANDATORYFIELDS ; --WHERE UPDATEDBY = i_vcUpdatedBy;

  INSERT INTO TB_MISSINGMANDATORYFIELDS(
         CUSTOMERID, ACCOUNTNO, CUSTOMERNAME, 
	 MISSINGMANDATORYFIELD, COMPLIANCESCORE, BRANCHCODE, UPDATEDBY)
  SELECT NVL(CUSTOMERID,' ') AS CUSTOMERID, NVL(ACCOUNTNO,' ') AS ACCOUNTNO, NVL(CUSTOMERNAME,' ') AS CUSTOMERNAME,
         NVL(FIELDNAME,' ') AS FIELDNAME, NVL(COMPLIANCESCORE,' ') AS COMPLIANCESCORE,
         NVL(BRANCHCODE,' ') AS BRANCHCODE, i_vcUserCode AS UPDATEDBY
    FROM TT_MMINFO_MMFO;
  COMMIT;
 

  vcSql := ' SELECT ROWPOSITION, CASE ROWPOS WHEN 1 THEN CUSTOMERID ELSE '' '' END AS CUSTOMERID, '||
           '        CASE ROWPOS WHEN 1 THEN CUSTOMERNAME ELSE '' '' END AS CUSTOMERNAME, '||
	   '        MISSINGMANDATORYFIELD, '||
           '        CASE ROWPOS WHEN 1 THEN ACCOUNTNO    ELSE '' '' END AS ACCOUNTNO, '||
	   '        COMPLIANCESCORE, '||
           '        CASE ROWPOS WHEN 1 THEN BRANCHCODE   ELSE '' '' END AS BRANCHCODE, '||
           '        CASE ROWPOS WHEN 1 THEN TOTALSCORE||''''   ELSE '' '' END AS TOTALSCORE '||
           '  FROM ( SELECT ROWNUM AS ROWPOSITION, A.* '||
	   '           FROM ( SELECT CUSTOMERID, CUSTOMERNAME, MISSINGMANDATORYFIELD, '||
           '                         ACCOUNTNO, COMPLIANCESCORE, BRANCHCODE, '||
	   '                         SUM(COMPLIANCESCORE) OVER(PARTITION BY CUSTOMERID,ACCOUNTNO) TOTALSCORE, '||
           '                         ROW_NUMBER() OVER(PARTITION BY CUSTOMERID,ACCOUNTNO ORDER BY ACCOUNTNO,MISSINGMANDATORYFIELD ) ROWPOS '||
           '                    FROM COMAML.TB_MISSINGMANDATORYFIELDS A '||
	   '                   ORDER BY CUSTOMERID, ACCOUNTNO ASC '||
	   '                ) A '||
	   '       ) A ' ;


  OPEN io_vcResultSet FOR vcSql ;

-- EXEC STP_MISSINGMANDATORYREPORT('1', 'ALL', 'ALL');

END STP_MISSINGMANDATORYREPORT;

/
