package com.quantumdataengines.app.compass.dao.login;

public interface Query {
	public static final String AUTHENTICATION = "SELECT A.USERCODE USERCODE "+
												"  FROM TB_USER A " +
												" WHERE A.USERCODE = ? " +
												"   AND A.USERPASS = ? ";
	public static final String AUTHORIZATION = "SELECT A.ROLEID ROLEID, A.ROLENAME ROLENAME, "+
												"      B.USERCODE USERCODE, C.LOGINPRIORITY LOGINPRIORITY "+
											    " FROM TB_ROLE A, TB_USER B, TB_USERROLEMAPPING C "+
											    "WHERE B.USERCODE = C.USERCODE "+
											    "  AND C.ROLEID = A.ROLEID "+
											    "  AND B.USERCODE = ? "+
											    "ORDER BY C.LOGINPRIORITY DESC";
	/*
	public static final String GET_USER = "SELECT A.USERCODE USERCODE, A.USERPASS USERPASS, "+
										  "       A.FIRSTNAME FIRSTNAME, A.LASTNAME LASTNAME, "+
										  "  CASE NVL(A.ACCOUNTENABLE, 'N') WHEN 'Y' THEN 'true' ELSE 'false' END ACCOUNTENABLE, "+
										  "  CASE NVL(A.ACCOUNTEXPIRED, 'N') WHEN 'Y' THEN 'false' ELSE 'true' END ACCOUNTEXPIRED, "+
										  "  CASE NVL(A.CREDENTIALEXPIRED, 'N') WHEN 'Y' THEN 'false' ELSE 'true' END CREDENTIALEXPIRED, "+
										  "  CASE NVL(A.ACCOUNTLOCKED, 'N') WHEN 'Y' THEN 'false' ELSE 'true' END ACCOUNTLOCKED, "+
										  "  CASE NVL(A.CHATENABLE, 'N') WHEN 'Y' THEN 'true' ELSE 'false' END CHATENABLE, "+
										  "       A.ACCESSSTARTTIME ACCESSSTARTTIME, A.ACCESSENDTIME ACCESSENDTIME, "+
										  "       NVL(A.ACCESSPOINTS, '') ACCESSPOINTS, A.CREATIONTIME CREATIONTIME, A.LABELDIRECTION LABELDIRECTION, A.LANGUAGE LANGUAGE "+
										  "  FROM TB_USER A "+
										  " WHERE A.USERCODE = ?";
	*/
	public static final String GET_USER = "SELECT A.USERCODE USERCODE, A.USERPASS USERPASS, "+
										  "       A.FIRSTNAME FIRSTNAME, A.LASTNAME LASTNAME, "+
										  // "  CASE NVL(A.ACCOUNTENABLE, 'N') WHEN 'Y' THEN 'true' ELSE 'false' END ACCOUNTENABLE, "+
										  "  CASE WHEN NVL(A.ACCOUNTDELETED, 'N') = 'Y' THEN 'false' ELSE 'true' END ACCOUNTDELETED, "+
										  "  CASE WHEN NVL(A.ACCOUNTDORMANT, 'N') = 'Y' THEN 'false' ELSE 'true' END ACCOUNTDORMANT, "+
										  "  CASE WHEN (NVL(A.ACCOUNTENABLE, 'N') = 'Y' AND NVL(A.ACCOUNTDELETED, 'N') = 'N'  AND NVL(A.ACCOUNTDORMANT, 'N') = 'N' ) THEN 'true' ELSE 'false' END ACCOUNTENABLE, "+
										  "  CASE NVL(A.ACCOUNTEXPIRED, 'N') WHEN 'Y' THEN 'false' ELSE 'true' END ACCOUNTEXPIRED, "+
										  "  CASE NVL(A.CREDENTIALEXPIRED, 'N') WHEN 'Y' THEN 'false' ELSE 'true' END CREDENTIALEXPIRED, "+
										  "  CASE NVL(A.ACCOUNTLOCKED, 'N') WHEN 'Y' THEN 'false' ELSE 'true' END ACCOUNTLOCKED, "+
										  "  CASE NVL(A.CHATENABLE, 'N') WHEN 'Y' THEN 'true' ELSE 'false' END CHATENABLE, "+
										  "       A.ACCESSSTARTTIME ACCESSSTARTTIME, A.ACCESSENDTIME ACCESSENDTIME, "+
										  "       NVL(A.ACCESSPOINTS, '') ACCESSPOINTS, A.CREATIONTIME CREATIONTIME, A.LABELDIRECTION LABELDIRECTION, A.LANGUAGE LANGUAGE "+
										  "  FROM TB_USER A "+
										  " WHERE A.USERCODE = ?";

	public static final String LOGINPRIORITY =  "SELECT A.ROLENAME ROLENAME"+
												"  FROM TB_ROLE A, TB_USERROLEMAPPING B"+
												" WHERE USERCODE = ? "+
												"   AND A.ROLEID = B.ROLEID"+
												" ORDER BY LOGINPRIORITY "+
												"  DESC";
	public static final String GETROLENAMEURL = "SELECT ROLEID"+
											    "  FROM TB_ROLE"+
											    " WHERE ROLENAME = ?";
	public static final String CHANGEPASSWORD = "UPDATE TB_USER"+
												"   SET USERPASS = ?, CREDENTIALEXPIRED='N'"+
												" WHERE USERCODE = ?";
	public static final String PASSWORDCHANGELOG = "INSERT INTO TB_PASSWORDCHANGELOG(USERCODE, USERPASS, UPDATETIMESTAMP)"+
												   "VALUES (?,?,SYSTIMESTAMP)";
	//public static final String GETPASSWORDCHANGELOG = "SELECT ROWNUM, TO_CHAR(UPDATETIMESTAMP, 'dd/mm/yyyy') PASSWORDCHANGEDATE, "+
	public static final String GETPASSWORDCHANGELOG = "SELECT ROWNUM, FUN_DATETOCHAR(UPDATETIMESTAMP) PASSWORDCHANGEDATE, "+
													  "       TRUNC(SYSTIMESTAMP) - TRUNC(UPDATETIMESTAMP) CHANGEDAYS"+
													  "	 FROM TB_PASSWORDCHANGELOG"+
													  " WHERE 1 = 1"+
													  "   AND USERCODE = ?"+
													  " ORDER BY UPDATETIMESTAMP DESC";
	public static final String SETSYSTEMLOGINLOG = "INSERT INTO "+
													"      TB_SYSTEMLOGINLOG(USERCODE, ROLEID, IPADDRESS, LOGINSTATUS, LOGINSTATUSMESSAGE, "+
													"      LOGINDATETIME, SESSIONID, BROWSERINFO)"+
													"VALUES (?,?,?,?,?,SYSTIMESTAMP,?,?)";
	
	public static final String GETLASTLOGINTIME = "SELECT TO_CHAR(LOGINDATETIME, 'DD/MM/YYYY HH24:MI:SS') LASTLOGINTIME, "+
												  "       ROUND((CAST(SYSTIMESTAMP AS DATE) - CAST(LOGINDATETIME AS DATE)) * 24 * 60) TIMEDIFF, IPADDRESS"+
												  "  FROM TB_SYSTEMLOGINLOG"+
												  " WHERE USERCODE = ?"+
												  "   AND ROLEID = ?"+
												  "   AND LOGINSTATUS = ?"+
												  " ORDER BY LOGINDATETIME DESC";
	// public static final String UPDATELOGOUTIME = "UPDATE QDE2.TB_SYSTEMLOGINLOG SET APPROXLOGOUTTIME = SYSTIMESTAMP WHERE SESSIONID = ? AND ROLEID = ?";
	public static final String UPDATELOGOUTIME = "UPDATE COMAML_CM.TB_SYSTEMLOGINLOG SET APPROXLOGOUTTIME = SYSTIMESTAMP WHERE SESSIONID = ? AND ROLEID = ?";
}