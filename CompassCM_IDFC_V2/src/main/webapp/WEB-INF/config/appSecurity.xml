<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/security	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	
	<http pattern="/securityTesting/**" security="none"/>
	<http pattern="/raiseSuspicionFromPortal/**" security="none"/>
	<http pattern="/commonFromPortal/**" security="none"/>
	<http security="none" pattern="/ws/**"/>
	
	<http auto-config="true" use-expressions="true" disable-url-rewriting="true" servlet-api-provision="true">
		<intercept-url pattern="/securityTesting" access="isAnonymous()"/>
		<intercept-url pattern="/raiseSuspicionFromPortal/**" access="isAnonymous()"/>
		<intercept-url pattern="/commonFromPortal/**" access="permitAll"/>
		<intercept-url pattern="/**" method="OPTIONS" access="denyAll"/>
	    <intercept-url pattern="/includes/**" access="permitAll"/>
	    <intercept-url pattern="/getHashtoken" access="permitAll"/>	    
		<intercept-url pattern="/loginFailure" access="isAnonymous()"/>
		<intercept-url pattern="/logoutSuccess/**"  access="isAnonymous()"/>
		<intercept-url pattern="/login" access="isAnonymous()" requires-channel="http"/>
		
		<intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_ADMIN','ROLE_AUDITUSER','ROLE_MLRO','ROLE_AMLO','ROLE_MLROL1','ROLE_MLROL2','ROLE_BTGUSER','ROLE_ITUSER','ROLE_CHECKER','ROLE_MAKER')" requires-channel="http"/>
		<intercept-url pattern="/branchuser/**" access="hasAnyRole('ROLE_BRANCHUSER','ROLE_FATCARMUSER')" requires-channel="http"/>
		<intercept-url pattern="/user/**" access="hasAnyRole('ROLE_USER','ROLE_FATCARMUSER')" requires-channel="http"/>
		<intercept-url pattern="/amluser/**" access="hasAnyRole('ROLE_AMLUSER','ROLE_FATCAUSER','ROLE_AUDITUSER','ROLE_AMLUSERL1','ROLE_AMLUSERL2','ROLE_AMLUSERL3','ROLE_BTGUSER','ROLE_ITUSER')" requires-channel="http"/>
		<intercept-url pattern="/amlo/**" access="hasAnyRole('ROLE_AMLO','ROLE_FATCAOFFICER','ROLE_AMLUSERL3', 'ROLE_LEAMAKER')" requires-channel="http"/>
		<intercept-url pattern="/mlro/**" access="hasAnyRole('ROLE_MLRO','ROLE_FATCAMANAGER','ROLE_AMLO','ROLE_MLROL1','ROLE_MLROL2','ROLE_LEACHECKER')" requires-channel="http"/>
		<intercept-url pattern="/amlrep/**" access="hasAnyRole('ROLE_AMLREP','ROLE_FATCAUSER','ROLE_AUDITUSER','ROLE_BTGUSER','ROLE_ITUSER','ROLE_AMLO','ROLE_MLRO','ROLE_MLROL1','ROLE_MLROL2','ROLE_AMLUSER','ROLE_AMLUSERL1','ROLE_AMLUSERL2','ROLE_AMLUSERL3')" requires-channel="http"/>
		<intercept-url pattern="/etl/**" access="hasRole('ROLE_ETL')" requires-channel="http"/>
		<intercept-url pattern="/cpumaker/**" access="hasAnyRole('ROLE_CPUMAKER','ROLE_CPUCHECKER','ROLE_AMLUSER','ROLE_AMLO','ROLE_MLRO','ROLE_AMLREP')" requires-channel="http"/>
		<intercept-url pattern="/cpuchecker/**" access="hasAnyRole('ROLE_CPUMAKER','ROLE_CPUCHECKER')" requires-channel="http"/>
		<intercept-url pattern="/cpuadmin/**" access="hasRole('ROLE_CPUADMIN')" requires-channel="http"/>
		<intercept-url pattern="/adminMaker/**" access="hasAnyRole('ROLE_ADMIN','ROLE_MAKER')" requires-channel="http"/>
		<intercept-url pattern="/checker/**" access="hasRole('ROLE_CHECKER')" requires-channel="http"/>
		<intercept-url pattern="/maker/**" access="hasRole('ROLE_MAKER')" requires-channel="http"/>
		<intercept-url pattern="/amlCaseWorkFlow/caseReassignment/**" access="hasAnyRole('ROLE_AMLO','ROLE_MLRO')" requires-channel="http"/>
		<intercept-url pattern="/amlCaseWorkFlow/casesToBeReviewedByAMLO/**" access="hasAnyRole('ROLE_AMLO','ROLE_MLRO')" requires-channel="http"/>
		<intercept-url pattern="/admin/userHierarchyMapping/**" access="hasAnyRole('ROLE_AMLO','ROLE_MLRO')" requires-channel="http"/>
		<intercept-url pattern="/common/getListOfSpecificReports/**" access="hasAnyRole('ROLE_AMLO','ROLE_MLRO')" requires-channel="http"/>
		<intercept-url pattern="/common/**" access="hasAnyRole('ROLE_ADMIN','ROLE_BRANCHUSER','ROLE_USER','ROLE_AMLUSER','ROLE_AMLO','ROLE_MLRO','ROLE_AMLREP','ROLE_CHECKER','ROLE_MAKER','ROLE_ETL','ROLE_CPUMAKER','ROLE_CPUMAKER','ROLE_CPUADMIN','ROLE_CPUCHECKER','ROLE_AUDITUSER','ROLE_FATCAUSER','ROLE_FATCAOFFICER','ROLE_FATCAMANAGER','ROLE_FATCARMUSER','ROLE_RPTMAKER','ROLE_RPTADMIN','ROLE_SWIFTUSER','ROLE_SWIFTADMIN','ROLE_AMLUSERL1','ROLE_AMLUSERL2','ROLE_AMLUSERL3','ROLE_MLROL1','ROLE_MLROL2','ROLE_BTGUSER','ROLE_ITUSER','ROLE_UAMREPORTSREVIEW','ROLE_SCREENINGMAKER','ROLE_SCREENINGCHECKER','ROLE_LEAMAKER', 'ROLE_LEACHECKER', 'ROLE_CM_ADMINMAKER', 'ROLE_CM_ADMINCHECKER', 'ROLE_CM_OFFICER', 'ROLE_CM_MANAGER', 'ROLE_CM_MAKER', 'ROLE_CM_CHECKER', 'ROLE_CM_UAMMAKER', 'ROLE_CM_UAMCHECKER' )" requires-channel="http"/>
		<intercept-url pattern="/rptadmin/**" access="hasRole('ROLE_RPTADMIN')" requires-channel="http"/>
		<intercept-url pattern="/rptmaker/**" access="hasRole('ROLE_RPTMAKER')" requires-channel="http"/>
		<intercept-url pattern="/rptcommon/**" access="hasAnyRole('ROLE_RPTMAKER','ROLE_RPTADMIN')" requires-channel="http"/>
		<intercept-url pattern="/swiftuser/**" access="hasRole('ROLE_SWIFTUSER')" requires-channel="http"/>
		<intercept-url pattern="/swiftadmin/**" access="hasRole('ROLE_SWIFTADMIN')" requires-channel="http"/>
		<intercept-url pattern="/swiftcommon/**" access="hasAnyRole('ROLE_SWIFTUSER','ROLE_SWIFTADMIN')" requires-channel="http"/>
		<intercept-url pattern="/leamaker/**" access="hasAnyRole('ROLE_LEAMAKER','ROLE_AMLO')" requires-channel="http"/>
		<intercept-url pattern="/leachecker/**" access="hasAnyRole('ROLE_LEACHECKER','ROLE_MLRO')" requires-channel="http"/>
		<intercept-url pattern="/screeningMaker/**" access="hasAnyRole('ROLE_SCREENINGMAKER')"/>
		<intercept-url pattern="/screeningChecker/**" access="hasAnyRole('ROLE_SCREENINGCHECKER')"/>
		<intercept-url pattern="/cmOfficer/**" access="hasAnyRole('ROLE_CM_OFFICER')"/>
		<intercept-url pattern="/cmManager/**" access="hasAnyRole('ROLE_CM_MANAGER')"/>
		<intercept-url pattern="/cmMaker/**" access="hasAnyRole('ROLE_CM_MAKER')"/>
		<intercept-url pattern="/cmChecker/**" access="hasAnyRole('ROLE_CM_CHECKER')"/>
		<intercept-url pattern="/cmUAMMaker/**" access="hasAnyRole('ROLE_CM_UAMMAKER')"/>
		<intercept-url pattern="/cmUAMChecker/**" access="hasAnyRole('ROLE_CM_UAMCHECKER')"/>
		<intercept-url pattern="/cmAdminMaker/**" access="hasAnyRole('ROLE_CM_ADMINMAKER')"/>
		<intercept-url pattern="/cmAdminChecker/**" access="hasAnyRole('ROLE_CM_ADMINCHECKER')"/>
		<intercept-url pattern="/**" access="isAuthenticated()" />
		
		<access-denied-handler error-page="/403" />		

		<form-login login-page="/login" default-target-url="/index" login-processing-url="/loginAction"
		    username-parameter="username" password-parameter="password" authentication-failure-url="/loginFailure"
		    authentication-success-handler-ref="loginSuccessHandler"
			authentication-failure-handler-ref="loginFailedHandler"/>

		<logout logout-success-url="/logoutSuccess/1" delete-cookies="JSESSIONID"
			invalidate-session="true" logout-url="/logout" />

		<csrf />

		<headers>
			<xss-protection enabled="true" />
			<frame-options policy="DENY" />
			<hsts include-subdomains="true" max-age-seconds="31536000"/>
			<content-type-options />
			<xss-protection block="true"/>
		</headers>
		
		<session-management session-fixation-protection="newSession" invalid-session-url="/logoutSuccess/4" 
							session-authentication-error-url="/logoutSuccess/2">
			<concurrency-control max-sessions="1" session-registry-ref="sessionRegistry" 
								 expired-url="/logoutSuccess/3"/>
		</session-management>
		
		<port-mappings>
			<port-mapping http="80" https="443"/>
	        <port-mapping http="${compass.aml.ports.http}" https="${compass.aml.ports.https}"/>
    	</port-mappings>
		
		<custom-filter ref="contextSettingFilter" before="FORM_LOGIN_FILTER"/>
	</http>
	
	<authentication-manager alias="compassAuthenticationManager">
        <authentication-provider  ref="compassAuthenticationProvider" />
    </authentication-manager>
	
	<beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
	</beans:beans>
