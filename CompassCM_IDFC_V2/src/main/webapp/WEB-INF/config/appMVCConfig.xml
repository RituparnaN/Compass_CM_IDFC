<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd" default-lazy-init="false">

	<aop:aspectj-autoproxy/>
	<context:annotation-config />
	<context:component-scan base-package="com.quantumdataengines.app.compass.**" />
	
	<context:property-placeholder location="classpath:properties/ports.properties,
											classpath:properties/paths.properties,
											classpath:properties/config.properties" />

	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="/WEB-INF/resource_bundles/message"/>
		<property name="useCodeAsDefaultMessage" value="true"/>
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>
    
	<mvc:annotation-driven/>
	<mvc:resources location="/WEB-INF/resources/" mapping="/includes/**"/>
	<mvc:interceptors>
		
		<mvc:interceptor>
			<mvc:mapping path="/*/**"/>
			<bean class="com.quantumdataengines.app.compass.interceptor.AbstractCheckPointFilter" />
		</mvc:interceptor>
		
		<mvc:interceptor>
			<mvc:mapping path="/*/**"/>
			<bean class="com.quantumdataengines.app.compass.interceptor.UrlAuthorizationFilter" />
		</mvc:interceptor>
		
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
                <property name="cacheSeconds" value="0"/>
                <property name="useExpiresHeader" value="true"/>
                <property name="useCacheControlHeader" value="true"/>
                <property name="useCacheControlNoStore" value="true"/>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>
    
    <task:executor id="myExecutor" pool-size="1"/>
    <task:scheduler id="myScheduler" pool-size="1"/>
    <task:annotation-driven executor="myExecutor" scheduler="myScheduler"/> 
    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<property name="maxUploadSize" value="52428800"/>
    </bean>
    
	<bean id="contentNegotiatingResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="#{T(org.springframework.core.Ordered).HIGHEST_PRECEDENCE}" />
		<property name="contentNegotiationManager">
            <bean class="org.springframework.web.accept.ContentNegotiationManager">
                <constructor-arg>
                    <bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
                        <constructor-arg>
                            <map>
                                <entry key="json" value="application/json"/>
                                <entry key="xml" value="application/xml"/>
                                <entry key="xlsx" value="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"/>
                            </map>
                        </constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
		<property name="defaultViews">
            <list>
                <!-- JSON View -->
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />

                <!-- XML View -->
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <constructor-arg>
                        <bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
                            <property name="packagesToScan">
                                <list>
                                    <value>com.quantumdataengines.compass.aml.oxm</value>
                                </list>
                            </property>
                        </bean>
                    </constructor-arg>
                </bean>
                
                <!-- XLSX View -->
                <bean class="com.quantumdataengines.app.compass.view.ExcelView"/>
            </list>
        </property>
	</bean>
	
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
        <property name="order" value="#{contentNegotiatingResolver.order+1}" />
    </bean>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/pages/"/>
		<property name="suffix" value=".jsp"/>
		<property name="order" value="#{tilesViewResolver.order+1}"/>
	</bean>
	
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/config/tile-defs/templates.xml</value>
                <value>/WEB-INF/config/tile-defs/users.xml</value>
            </list>
        </property>
    </bean>
</beans>